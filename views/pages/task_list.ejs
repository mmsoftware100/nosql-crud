<style>
    body{
      display: flex;
      justify-content: center;
    }
    section{
      flex: 1;
      max-width: 500px;
      min-width: 300px;
      width: 100%;
      height: 100vh;
      overflow: scroll;
      background-color: wheat;
      padding: 8px;
    }
    .task-item {
      cursor: pointer;
      padding: 8px;
      display: flex;
      align-items: center;
    }
    .task-item:hover {
      cursor: pointer;
      padding: 8px;
      background-color: gray;
      color: white;
      border-radius: 8px;
    }
    .completed{
        text-decoration: line-through;
    }
    .task-name{
      flex: 3;
    }
    .task-delete{
      color: red;
    }
  </style>

  <section>

    <h2>Task List</h2>
    <form action="/submit-task" method="POST">
      <input type="text" name="name" required placeholder="New Task" id="task-input"/>
      <input type="submit" value="Insert" />
    </form>
    
        <% task_list.forEach(function(task) { %>
            <div data-id="<%= task._id %>" data-status="<%= task.status %>" class="task-item <%= task.status == true ? 'completed' : '' %>">
              
              <span class="task-name" ><%= task.name %></span>
               <form action="/delete-task" method="POST" style="display: inline;" class="task-delete">
                <input type="hidden" name="id" value="<%= task._id %>" required />
                <input type="submit" value="x" />
              </form>
            </div>
          <% }); %>
  </section>
  

<script>

    window.onload = function() {
      document.getElementById('task-input').focus();
    };
    // Get all elements with a specific class name
    const task_items = document.getElementsByClassName('task-item');
    for (let i = 0; i < task_items.length; i++) {
      task_items[i].addEventListener('click', (event) => {
          // taskItem.classList.toggle('completed');
          console.log("clicked");
          const _id = event.target.getAttribute('data-id');
          const status = event.target.getAttribute('data-status');
          //alert(status);
          if(status == "true"){
            //alert("original is true");
          }
          else{
            //alert("origin is not trur");
          }
          let status_update = status == "true" ? false : true;
          //alert(status_update);
          //return;
          // event.target.setAttribute('data-status', status_update);
          event.target.setAttribute('data-status', status_update);

          const data = {
            "status" : status_update
          };

          // need to change data-status also
          if(status_update == true){
            // add line through class -> completed
            event.target.classList.toggle('completed');
          }
          else{
            // remove class -> completed
            event.target.classList.toggle('completed');
          }
          // make ajax call 
          // Define the URL and request data
            const url = './api/v1/tasks/' + _id;
            

            // Create a request object
            const requestOptions = {
              method: 'PUT',
              headers: {
                  'Content-Type': 'application/json', // Set the content type to JSON
              },
              body: JSON.stringify(data), // Convert the data object to JSON string
            };

            // Make the POST request
            fetch(url, requestOptions)
            .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json(); // Parse the response JSON
            })
            .then(data => {
                console.log('Response data:', data);
                // TODO: add task element
            })
            .catch(error => {
                console.error('Error:', error);
            });

        });
    }

    
</script>